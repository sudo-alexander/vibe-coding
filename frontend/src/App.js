import React, { useState, useEffect } from "react";
import { BrowserRouter, Routes, Route, Link, useLocation } from "react-router-dom";
import axios from "axios";
import "./App.css";

const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;
const API = `${BACKEND_URL}/api`;

// Map Component using OpenStreetMap with dark theme
const InteractiveMap = ({ places, selectedPlace, onPlaceSelect }) => {
  useEffect(() => {
    if (typeof window !== 'undefined' && window.L && document.getElementById('map')) {
      const map = window.L.map('map').setView([56.3287, 44.0020], 10);
      
      // Dark theme tiles
      window.L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://stadiamaps.com/">Stadia Maps</a>, &copy; <a href="https://openmaptiles.org/">OpenMapTiles</a> &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'
      }).addTo(map);

      // Custom orange marker icon
      const orangeIcon = window.L.divIcon({
        className: 'custom-div-icon',
        html: '<div class="marker-pin" style="background-color: #ff6b35; width: 30px; height: 30px; border-radius: 50% 50% 50% 0; position: relative; transform: rotate(-45deg); border: 2px solid #ff8c42;"><div style="width: 10px; height: 10px; background-color: #ffffff; border-radius: 50%; position: absolute; top: 8px; left: 8px; transform: rotate(45deg);"></div></div>',
        iconSize: [30, 42],
        iconAnchor: [15, 42]
      });

      places.forEach(place => {
        const marker = window.L.marker([place.latitude, place.longitude], { icon: orangeIcon })
          .addTo(map)
          .bindPopup(`<div style="color: #1a1a1a;"><b>${place.name}</b><br/>${place.description}</div>`)
          .on('click', () => onPlaceSelect(place));
        
        if (selectedPlace && selectedPlace.id === place.id) {
          marker.openPopup();
        }
      });

      return () => {
        map.remove();
      };
    }
  }, [places, selectedPlace, onPlaceSelect]);

  return <div id="map" className="w-full h-96 rounded-lg shadow-2xl border border-orange-500/20"></div>;
};

// Navigation Component with dark theme (removed Events)
const Navigation = () => {
  const location = useLocation();
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  
  const navItems = [
    { path: "/", label: "–ì–ª–∞–≤–Ω–∞—è", icon: "üè†" },
    { path: "/history", label: "–ò—Å—Ç–æ—Ä–∏—è", icon: "üìö" },
    { path: "/attractions", label: "–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", icon: "üèõÔ∏è" },
    { path: "/contacts", label: "–ö–æ–Ω—Ç–∞–∫—Ç—ã", icon: "üìß" },
    { path: "/admin", label: "–ê–¥–º–∏–Ω", icon: "‚öôÔ∏è" }
  ];

  return (
    <nav className="bg-gray-900 border-b border-orange-500/20 shadow-xl sticky top-0 z-50 backdrop-blur-sm">
      <div className="max-w-7xl mx-auto px-4">
        <div className="flex justify-between h-16">
          <div className="flex items-center">
            <Link to="/" className="flex items-center space-x-3 hover:scale-105 transition-transform">
              <div className="w-10 h-10 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full flex items-center justify-center shadow-lg">
                <span className="text-black font-bold text-xl">–ù–û</span>
              </div>
              <span className="text-white font-bold text-xl">–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å</span>
            </Link>
          </div>

          {/* Desktop Menu */}
          <div className="hidden md:flex items-center space-x-1">
            {navItems.map((item) => (
              <Link
                key={item.path}
                to={item.path}
                className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 hover:scale-105 ${
                  location.pathname === item.path
                    ? 'bg-orange-500 text-black shadow-lg shadow-orange-500/25'
                    : 'text-gray-300 hover:bg-orange-500/10 hover:text-orange-400 border border-transparent hover:border-orange-500/20'
                }`}
              >
                <span className="mr-2">{item.icon}</span>
                {item.label}
              </Link>
            ))}
          </div>

          {/* Mobile menu button */}
          <div className="md:hidden flex items-center">
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="text-gray-300 hover:text-orange-400 transition-colors"
            >
              <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} 
                      d={isMenuOpen ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"} />
              </svg>
            </button>
          </div>
        </div>

        {/* Mobile Menu */}
        {isMenuOpen && (
          <div className="md:hidden border-t border-orange-500/20">
            <div className="px-2 pt-2 pb-3 space-y-1">
              {navItems.map((item) => (
                <Link
                  key={item.path}
                  to={item.path}
                  className={`block px-3 py-2 rounded-lg text-base font-medium transition-colors ${
                    location.pathname === item.path
                      ? 'bg-orange-500 text-black'
                      : 'text-gray-300 hover:bg-orange-500/10 hover:text-orange-400'
                  }`}
                  onClick={() => setIsMenuOpen(false)}
                >
                  <span className="mr-2">{item.icon}</span>
                  {item.label}
                </Link>
              ))}
            </div>
          </div>
        )}
      </div>
    </nav>
  );
};

// Home Page with dark theme
const HomePage = () => {
  const [places, setPlaces] = useState([]);
  const [selectedPlace, setSelectedPlace] = useState(null);

  useEffect(() => {
    fetchPlaces();
  }, []);

  const fetchPlaces = async () => {
    try {
      const response = await axios.get(`${API}/places`);
      setPlaces(response.data);
    } catch (error) {
      console.error('Error fetching places:', error);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900">
      {/* Hero Section with dark theme */}
      <div className="relative overflow-hidden bg-gradient-to-r from-black via-gray-900 to-black">
        <div className="absolute inset-0 bg-gradient-to-r from-orange-500/5 via-transparent to-orange-500/5"></div>
        <div className="relative max-w-7xl mx-auto py-32 px-4 text-center">
          <h1 className="text-6xl font-bold mb-8 bg-gradient-to-r from-orange-400 via-orange-300 to-orange-500 bg-clip-text text-transparent animate-fade-in">
            –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å
          </h1>
          <div className="h-1 w-32 bg-gradient-to-r from-orange-500 to-orange-600 mx-auto mb-8 rounded-full"></div>
          <p className="text-xl mb-12 max-w-4xl mx-auto text-gray-300 leading-relaxed animate-fade-in-delay">
            –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ–≥–∞—Ç–µ–π—à—É—é –∏—Å—Ç–æ—Ä–∏—é –¥—Ä–µ–≤–Ω–µ–≥–æ –∫—Ä–∞—è, –≥–¥–µ —Ä–µ–∫–∞ –í–æ–ª–≥–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å –û–∫–æ–π. 
            –ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã—Ö –Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø—Ä–æ–º—ã—Å–ª–æ–≤ - —Ö–æ—Ö–ª–æ–º—Å–∫–æ–π –∏ –≥–æ—Ä–æ–¥–µ—Ü–∫–æ–π —Ä–æ—Å–ø–∏—Å–∏, 
            —Å–µ–º—ë–Ω–æ–≤—Å–∫–∏—Ö –º–∞—Ç—Ä—ë—à–µ–∫. –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π –∫—Ä–µ–º–ª—å XVI –≤–µ–∫–∞, 
            –ø—Ä–æ–≥—É–ª—è–π—Ç–µ—Å—å –ø–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –≥–æ—Ä–æ–¥–∞–º –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –ø—Ä–∏—Ä–æ–¥–Ω—ã–º–∏ –∫—Ä–∞—Å–æ—Ç–∞–º–∏ –ü–æ–≤–æ–ª–∂—å—è.
          </p>
          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <Link to="/attractions" 
                  className="group bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-400 hover:to-orange-500 text-black px-8 py-4 rounded-xl font-bold text-lg transition-all duration-300 transform hover:scale-105 shadow-xl hover:shadow-orange-500/25">
              <span className="flex items-center justify-center">
                üó∫Ô∏è –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                <svg className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clipRule="evenodd" />
                </svg>
              </span>
            </Link>
            <Link to="/history" 
                  className="group border-2 border-orange-500 hover:bg-orange-500/10 text-orange-400 hover:text-orange-300 px-8 py-4 rounded-xl font-bold text-lg transition-all duration-300 transform hover:scale-105">
              <span className="flex items-center justify-center">
                üìú –£–∑–Ω–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é
                <svg className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                  <path fillRule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clipRule="evenodd" />
                </svg>
              </span>
            </Link>
          </div>
        </div>
      </div>

      {/* Interactive Map Section */}
      <div className="max-w-7xl mx-auto py-20 px-4">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold mb-4 text-white">
            –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ä–µ–≥–∏–æ–Ω–∞
          </h2>
          <div className="h-1 w-24 bg-gradient-to-r from-orange-500 to-orange-600 mx-auto mb-6 rounded-full"></div>
          <p className="text-gray-400 max-w-3xl mx-auto text-lg leading-relaxed">
            –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–µ –º–µ—Å—Ç–∞ –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç–µ. 
            –ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–µ –º–∞—Ä–∫–µ—Ä—ã, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø–∞–º—è—Ç–Ω–∏–∫–∞—Ö, 
            –≥–æ—Ä–æ–¥–∞—Ö –Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø—Ä–æ–º—ã—Å–ª–æ–≤ –∏ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö.
          </p>
        </div>
        
        <InteractiveMap 
          places={places} 
          selectedPlace={selectedPlace} 
          onPlaceSelect={setSelectedPlace} 
        />
        
        {selectedPlace && (
          <div className="mt-8 p-8 bg-gray-800/50 rounded-xl shadow-2xl border border-orange-500/20 backdrop-blur-sm">
            <h3 className="text-3xl font-bold mb-4 text-orange-400">{selectedPlace.name}</h3>
            <p className="text-gray-300 mb-6 text-lg leading-relaxed">{selectedPlace.description}</p>
            {selectedPlace.image_url && (
              <img 
                src={selectedPlace.image_url} 
                alt={selectedPlace.name}
                className="w-full max-w-md mx-auto rounded-lg shadow-lg mb-4"
              />
            )}
            <div className="flex items-center space-x-4">
              <span className="inline-flex items-center px-4 py-2 bg-orange-500/20 text-orange-300 rounded-full text-sm font-medium border border-orange-500/30">
                <span className="w-2 h-2 bg-orange-400 rounded-full mr-2"></span>
                {selectedPlace.category === 'kremlin' ? '–ö—Ä–µ–º–ª—å' :
                 selectedPlace.category === 'museum' ? '–ú—É–∑–µ–π' :
                 selectedPlace.category === 'nature' ? '–ü—Ä–∏—Ä–æ–¥–∞' :
                 selectedPlace.category === 'architecture' ? '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞' :
                 selectedPlace.category === 'monastery' ? '–ú–æ–Ω–∞—Å—Ç—ã—Ä—å' :
                 selectedPlace.category === 'city' ? '–ì–æ—Ä–æ–¥' : selectedPlace.category}
              </span>
              <span className="text-gray-500 text-sm">
                üìç {selectedPlace.latitude.toFixed(4)}, {selectedPlace.longitude.toFixed(4)}
              </span>
            </div>
          </div>
        )}
      </div>

      {/* Features Section */}
      <div className="bg-gray-900/50 py-20 backdrop-blur-sm">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold mb-4 text-white">
              –°–æ–∫—Ä–æ–≤–∏—â–∞ –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
            </h2>
            <div className="h-1 w-32 bg-gradient-to-r from-orange-500 to-orange-600 mx-auto rounded-full"></div>
          </div>
          
          <div className="grid md:grid-cols-3 gap-8">
            <div className="group text-center p-8 bg-gray-800/30 rounded-2xl border border-orange-500/10 hover:border-orange-500/30 transition-all duration-300 hover:transform hover:scale-105 backdrop-blur-sm">
              <div className="text-6xl mb-6 group-hover:scale-110 transition-transform duration-300">üè∞</div>
              <h3 className="text-2xl font-bold mb-4 text-orange-400">–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ</h3>
              <p className="text-gray-400 leading-relaxed">
                800-–ª–µ—Ç–Ω—è—è –∏—Å—Ç–æ—Ä–∏—è —Ä–µ–≥–∏–æ–Ω–∞ –≤–æ–ø–ª–æ—â–µ–Ω–∞ –≤ –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–º –∫—Ä–µ–º–ª–µ XVI –≤–µ–∫–∞, 
                –¥—Ä–µ–≤–Ω–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –ø–∞–º—è—Ç–Ω–∏–∫–∞—Ö —Ä–∞–∑–Ω—ã—Ö —ç–ø–æ—Ö
              </p>
            </div>
            
            <div className="group text-center p-8 bg-gray-800/30 rounded-2xl border border-orange-500/10 hover:border-orange-500/30 transition-all duration-300 hover:transform hover:scale-105 backdrop-blur-sm">
              <div className="text-6xl mb-6 group-hover:scale-110 transition-transform duration-300">üé®</div>
              <h3 className="text-2xl font-bold mb-4 text-orange-400">–ù–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–æ–º—ã—Å–ª—ã</h3>
              <p className="text-gray-400 leading-relaxed">
                –ú–∏—Ä–æ–≤–∞—è —Å–ª–∞–≤–∞ —Ö–æ—Ö–ª–æ–º—Å–∫–æ–π —Ä–æ—Å–ø–∏—Å–∏, –≥–æ—Ä–æ–¥–µ—Ü–∫–∏—Ö —É–∑–æ—Ä–æ–≤ –∏ —Å–µ–º—ë–Ω–æ–≤—Å–∫–∏—Ö –º–∞—Ç—Ä—ë—à–µ–∫. 
                –ñ–∏–≤—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, –ø–µ—Ä–µ–¥–∞—é—â–∏–µ—Å—è –∏–∑ –ø–æ–∫–æ–ª–µ–Ω–∏—è –≤ –ø–æ–∫–æ–ª–µ–Ω–∏–µ
              </p>
            </div>
            
            <div className="group text-center p-8 bg-gray-800/30 rounded-2xl border border-orange-500/10 hover:border-orange-500/30 transition-all duration-300 hover:transform hover:scale-105 backdrop-blur-sm">
              <div className="text-6xl mb-6 group-hover:scale-110 transition-transform duration-300">üåä</div>
              <h3 className="text-2xl font-bold mb-4 text-orange-400">–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞</h3>
              <p className="text-gray-400 leading-relaxed">
                –°–ª–∏—è–Ω–∏–µ –≤–µ–ª–∏–∫–∏—Ö —Ä–µ–∫ –í–æ–ª–≥–∏ –∏ –û–∫–∏, –∑–∞–≥–∞–¥–æ—á–Ω–æ–µ –æ–∑–µ—Ä–æ –°–≤–µ—Ç–ª–æ—è—Ä, 
                –¥–µ–≤—Å—Ç–≤–µ–Ω–Ω—ã–µ –ª–µ—Å–∞ –ö–µ—Ä–∂–µ–Ω—Å–∫–æ–≥–æ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–∞ –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ª–∞–Ω–¥—à–∞—Ñ—Ç—ã –ü–æ–≤–æ–ª–∂—å—è
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

// History Page with animated timeline cards
const HistoryPage = () => {
  const [historyEvents, setHistoryEvents] = useState([]);
  const [visibleEvents, setVisibleEvents] = useState([]);

  useEffect(() => {
    fetchHistory();
  }, []);

  useEffect(() => {
    // Animate cards appearing one by one
    historyEvents.forEach((event, index) => {
      setTimeout(() => {
        setVisibleEvents(prev => [...prev, event]);
      }, index * 200);
    });
  }, [historyEvents]);

  const fetchHistory = async () => {
    try {
      const response = await axios.get(`${API}/history`);
      setHistoryEvents(response.data);
      setVisibleEvents([]); // Reset visible events
    } catch (error) {
      console.error('Error fetching history:', error);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 py-12">
      <div className="max-w-4xl mx-auto px-4">
        <div className="text-center mb-16">
          <h1 className="text-5xl font-bold mb-6 bg-gradient-to-r from-orange-400 to-orange-600 bg-clip-text text-transparent animate-fade-in">
            –ò—Å—Ç–æ—Ä–∏—è –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
          </h1>
          <div className="h-1 w-32 bg-gradient-to-r from-orange-500 to-orange-600 mx-auto mb-6 rounded-full"></div>
          <p className="text-gray-400 text-lg max-w-3xl mx-auto leading-relaxed">
            –û—Ç –æ—Å–Ω–æ–≤–∞–Ω–∏—è –≤ 1221 –≥–æ–¥—É –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ - –≤–æ—Å–µ–º—å –≤–µ–∫–æ–≤ –±–æ–≥–∞—Ç–µ–π—à–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ä—É—Å—Å–∫–æ–≥–æ –∫—Ä–∞—è
          </p>
        </div>
        
        <div className="relative">
          <div className="absolute left-8 top-0 bottom-0 w-1 bg-gradient-to-b from-orange-500 via-orange-400 to-orange-500 rounded-full"></div>
          
          {historyEvents.map((event, index) => {
            const isVisible = visibleEvents.some(ve => ve.id === event.id);
            return (
              <div 
                key={event.id} 
                className={`relative mb-12 ml-16 transition-all duration-700 ${
                  isVisible 
                    ? 'opacity-100 transform translate-x-0' 
                    : 'opacity-0 transform translate-x-8'
                }`}
              >
                <div className="absolute -left-11 w-8 h-8 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full border-4 border-gray-900 shadow-xl flex items-center justify-center animate-pulse-slow">
                  <div className="w-2 h-2 bg-white rounded-full"></div>
                </div>
                <div className="group bg-gray-800/40 p-8 rounded-2xl border border-orange-500/20 hover:border-orange-500/40 transition-all duration-300 hover:transform hover:scale-[1.02] backdrop-blur-sm animate-slide-up">
                  <div className="flex items-center mb-4">
                    <span className="bg-gradient-to-r from-orange-500 to-orange-600 text-black px-4 py-2 rounded-full text-sm font-bold shadow-lg">
                      {event.year}
                    </span>
                  </div>
                  <h3 className="text-2xl font-bold mb-4 text-orange-400 group-hover:text-orange-300 transition-colors">
                    {event.title}
                  </h3>
                  <p className="text-gray-300 leading-relaxed text-lg">{event.description}</p>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};

// Combined Attractions Page (includes culture and attractions)
const AttractionsPage = () => {
  const [places, setPlaces] = useState([]);
  const [cultureItems, setCultureItems] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('all');

  useEffect(() => {
    fetchPlaces();
    fetchCulture();
  }, []);

  const fetchPlaces = async () => {
    try {
      const response = await axios.get(`${API}/places`);
      setPlaces(response.data);
    } catch (error) {
      console.error('Error fetching places:', error);
    }
  };

  const fetchCulture = async () => {
    try {
      const response = await axios.get(`${API}/culture`);
      setCultureItems(response.data);
    } catch (error) {
      console.error('Error fetching culture items:', error);
    }
  };

  const categories = [
    { value: 'all', label: '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', icon: 'üó∫Ô∏è' },
    { value: 'places', label: '–ú–µ—Å—Ç–∞', icon: 'üèõÔ∏è' },
    { value: 'culture', label: '–ö—É–ª—å—Ç—É—Ä–∞ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏', icon: 'üé®' }
  ];

  const getFilteredItems = () => {
    if (selectedCategory === 'all') {
      return [...places.map(p => ({...p, type: 'place'})), ...cultureItems.map(c => ({...c, type: 'culture'}))];
    } else if (selectedCategory === 'places') {
      return places.map(p => ({...p, type: 'place'}));
    } else if (selectedCategory === 'culture') {
      return cultureItems.map(c => ({...c, type: 'culture'}));
    }
    return [];
  };

  const filteredItems = getFilteredItems();

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 py-12">
      <div className="max-w-6xl mx-auto px-4">
        <div className="text-center mb-16">
          <h1 className="text-5xl font-bold mb-6 bg-gradient-to-r from-orange-400 to-orange-600 bg-clip-text text-transparent">
            –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫—É–ª—å—Ç—É—Ä–∞ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏
          </h1>
          <div className="h-1 w-32 bg-gradient-to-r from-orange-500 to-orange-600 mx-auto mb-6 rounded-full"></div>
          <p className="text-gray-400 text-lg max-w-3xl mx-auto leading-relaxed">
            –û—Ç–∫—Ä–æ–π—Ç–µ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–µ –º–µ—Å—Ç–∞, –Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–æ–º—ã—Å–ª—ã –∏ –∫—É–ª—å—Ç—É—Ä–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
          </p>
        </div>
        
        {/* Category Filter */}
        <div className="flex flex-wrap justify-center gap-4 mb-12">
          {categories.map(category => (
            <button
              key={category.value}
              onClick={() => setSelectedCategory(category.value)}
              className={`flex items-center px-6 py-3 rounded-xl font-medium transition-all duration-300 ${
                selectedCategory === category.value
                  ? 'bg-gradient-to-r from-orange-500 to-orange-600 text-black shadow-xl transform scale-105'
                  : 'bg-gray-800/50 text-gray-300 border border-orange-500/20 hover:border-orange-500/40 hover:bg-orange-500/10 hover:text-orange-400'
              }`}
            >
              <span className="mr-2">{category.icon}</span>
              {category.label}
            </button>
          ))}
        </div>

        {/* Items Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredItems.map(item => (
            <div key={item.id} className="group bg-gray-800/40 rounded-2xl border border-orange-500/20 hover:border-orange-500/40 transition-all duration-300 hover:transform hover:scale-105 backdrop-blur-sm overflow-hidden">
              {item.image_url && (
                <div className="h-48 overflow-hidden rounded-t-2xl">
                  <img 
                    src={item.image_url} 
                    alt={item.name || item.title}
                    className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
                  />
                </div>
              )}
              <div className="p-8">
                <div className="flex items-center justify-between mb-4">
                  <span className="inline-flex items-center px-3 py-1 bg-orange-500/20 text-orange-300 rounded-full text-sm font-medium border border-orange-500/30">
                    <span className="w-2 h-2 bg-orange-400 rounded-full mr-2"></span>
                    {item.type === 'place' 
                      ? (item.category === 'kremlin' ? '–ö—Ä–µ–º–ª—å' :
                         item.category === 'museum' ? '–ú—É–∑–µ–π' :
                         item.category === 'nature' ? '–ü—Ä–∏—Ä–æ–¥–∞' :
                         item.category === 'architecture' ? '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞' :
                         item.category === 'monastery' ? '–ú–æ–Ω–∞—Å—Ç—ã—Ä—å' :
                         item.category === 'city' ? '–ì–æ—Ä–æ–¥' : item.category)
                      : (item.category === 'craft' ? '–†–µ–º–µ—Å–ª–æ' :
                         item.category === 'tradition' ? '–¢—Ä–∞–¥–∏—Ü–∏—è' :
                         item.category === 'nature' ? '–ü—Ä–∏—Ä–æ–¥–∞' : item.category)
                    }
                  </span>
                </div>
                <h3 className="text-2xl font-bold mb-4 text-orange-400 group-hover:text-orange-300 transition-colors">
                  {item.name || item.title}
                </h3>
                <p className="text-gray-300 mb-6 leading-relaxed">{item.description}</p>
                {item.latitude && item.longitude && (
                  <div className="text-sm text-gray-500 flex items-center">
                    <span className="mr-2">üìç</span>
                    {item.latitude.toFixed(4)}, {item.longitude.toFixed(4)}
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>

        {filteredItems.length === 0 && (
          <div className="text-center py-16">
            <p className="text-gray-500 text-xl">–≠–ª–µ–º–µ–Ω—Ç—ã –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
          </div>
        )}
      </div>
    </div>
  );
};

// Contact Page with dark theme
const ContactPage = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitMessage, setSubmitMessage] = useState('');

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    try {
      await axios.post(`${API}/contact`, formData);
      setSubmitMessage('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      setFormData({ name: '', email: '', message: '' });
    } catch (error) {
      setSubmitMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
    
    setIsSubmitting(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 py-12">
      <div className="max-w-4xl mx-auto px-4">
        <div className="text-center mb-16">
          <h1 className="text-5xl font-bold mb-6 bg-gradient-to-r from-orange-400 to-orange-600 bg-clip-text text-transparent">
            –ö–æ–Ω—Ç–∞–∫—Ç—ã
          </h1>
          <div className="h-1 w-32 bg-gradient-to-r from-orange-500 to-orange-600 mx-auto mb-6 rounded-full"></div>
          <p className="text-gray-400 text-lg max-w-3xl mx-auto leading-relaxed">
            –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
          </p>
        </div>
        
        <div className="grid md:grid-cols-2 gap-12">
          {/* Contact Form */}
          <div className="bg-gray-800/40 rounded-2xl border border-orange-500/20 backdrop-blur-sm p-8">
            <h2 className="text-3xl font-bold mb-6 text-orange-400">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h2>
            <form onSubmit={handleSubmit} className="space-y-6">
              <div>
                <label className="block text-gray-300 text-sm font-bold mb-3">
                  –ò–º—è *
                </label>
                <input
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  required
                  className="w-full px-4 py-3 bg-gray-900/50 border border-orange-500/20 rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500/25 text-white transition-all duration-200"
                />
              </div>
              <div>
                <label className="block text-gray-300 text-sm font-bold mb-3">
                  Email *
                </label>
                <input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleInputChange}
                  required
                  className="w-full px-4 py-3 bg-gray-900/50 border border-orange-500/20 rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500/25 text-white transition-all duration-200"
                />
              </div>
              <div>
                <label className="block text-gray-300 text-sm font-bold mb-3">
                  –°–æ–æ–±—â–µ–Ω–∏–µ *
                </label>
                <textarea
                  name="message"
                  value={formData.message}
                  onChange={handleInputChange}
                  required
                  rows="5"
                  className="w-full px-4 py-3 bg-gray-900/50 border border-orange-500/20 rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500/25 text-white transition-all duration-200 resize-none"
                />
              </div>
              <button
                type="submit"
                disabled={isSubmitting}
                className="w-full bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-400 hover:to-orange-500 text-black font-bold py-4 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-xl hover:shadow-orange-500/25 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'}
              </button>
            </form>
            
            {submitMessage && (
              <div className={`mt-6 p-4 rounded-lg ${
                submitMessage.includes('–°–ø–∞—Å–∏–±–æ') 
                  ? 'bg-green-500/20 text-green-300 border border-green-500/30' 
                  : 'bg-red-500/20 text-red-300 border border-red-500/30'
              }`}>
                {submitMessage}
              </div>
            )}
          </div>

          {/* Contact Information */}
          <div className="bg-gray-800/40 rounded-2xl border border-orange-500/20 backdrop-blur-sm p-8">
            <h2 className="text-3xl font-bold mb-6 text-orange-400">–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            
            <div className="space-y-8">
              <div className="flex items-start space-x-4">
                <div className="w-12 h-12 bg-orange-500/20 rounded-lg flex items-center justify-center flex-shrink-0">
                  <span className="text-orange-400 text-xl">üìç</span>
                </div>
                <div>
                  <h3 className="font-bold text-gray-300 mb-2">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π —Ü–µ–Ω—Ç—Ä:</h3>
                  <p className="text-gray-400">
                    –≥. –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥<br />
                    –ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å<br />
                    –†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è
                  </p>
                </div>
              </div>
              
              <div className="flex items-start space-x-4">
                <div className="w-12 h-12 bg-orange-500/20 rounded-lg flex items-center justify-center flex-shrink-0">
                  <span className="text-orange-400 text-xl">üïí</span>
                </div>
                <div>
                  <h3 className="font-bold text-gray-300 mb-2">–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ü–µ–Ω—Ç—Ä—ã:</h3>
                  <p className="text-gray-400">
                    –ü–Ω-–ü—Ç: 9:00 - 18:00<br />
                    –°–±-–í—Å: 10:00 - 16:00<br />
                    –ú—É–∑–µ–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
                  </p>
                </div>
              </div>
              
              <div className="flex items-start space-x-4">
                <div className="w-12 h-12 bg-orange-500/20 rounded-lg flex items-center justify-center flex-shrink-0">
                  <span className="text-orange-400 text-xl">üéØ</span>
                </div>
                <div>
                  <h3 className="font-bold text-gray-300 mb-2">–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</h3>
                  <p className="text-gray-400">
                    ‚Ä¢ –ö—É–ª—å—Ç—É—Ä–Ω–æ-–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ç—É—Ä–∏–∑–º<br />
                    ‚Ä¢ –≠–∫—Å–∫—É—Ä—Å–∏–∏ –ø–æ –Ω–∞—Ä–æ–¥–Ω—ã–º –ø—Ä–æ–º—ã—Å–ª–∞–º<br />
                    ‚Ä¢ –†–µ—á–Ω—ã–µ –∫—Ä—É–∏–∑—ã –ø–æ –í–æ–ª–≥–µ<br />
                    ‚Ä¢ –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç—É—Ä–∏–∑–º
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

// Admin Page with dark theme
const AdminPage = () => {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [credentials, setCredentials] = useState({ username: '', password: '' });
  const [isInitializing, setIsInitializing] = useState(false);

  const handleLogin = (e) => {
    e.preventDefault();
    if (credentials.username === 'admin' && credentials.password === 'admin123') {
      setIsAuthenticated(true);
    } else {
      alert('–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
    }
  };

  const initializeData = async () => {
    setIsInitializing(true);
    try {
      const auth = btoa('admin:admin123');
      await axios.post(`${API}/init-data`, {}, {
        headers: { 'Authorization': `Basic ${auth}` }
      });
      alert('–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –Ω–æ–≤—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
    } catch (error) {
      console.error('Error initializing data:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
    setIsInitializing(false);
  };

  const clearData = async () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?')) {
      try {
        const auth = btoa('admin:admin123');
        await axios.post(`${API}/clear-data`, {}, {
          headers: { 'Authorization': `Basic ${auth}` }
        });
        alert('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã!');
      } catch (error) {
        console.error('Error clearing data:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö');
      }
    }
  };

  if (!isAuthenticated) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 flex items-center justify-center px-4">
        <div className="bg-gray-800/40 backdrop-blur-sm p-10 rounded-2xl border border-orange-500/20 w-full max-w-md">
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold mb-4 text-orange-400">–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</h1>
            <div className="h-1 w-16 bg-gradient-to-r from-orange-500 to-orange-600 mx-auto rounded-full"></div>
          </div>
          
          <form onSubmit={handleLogin} className="space-y-6">
            <div>
              <label className="block text-gray-300 text-sm font-bold mb-3">
                –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </label>
              <input
                type="text"
                value={credentials.username}
                onChange={(e) => setCredentials({...credentials, username: e.target.value})}
                className="w-full px-4 py-3 bg-gray-900/50 border border-orange-500/20 rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500/25 text-white transition-all duration-200"
                required
              />
            </div>
            <div>
              <label className="block text-gray-300 text-sm font-bold mb-3">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                type="password"
                value={credentials.password}
                onChange={(e) => setCredentials({...credentials, password: e.target.value})}
                className="w-full px-4 py-3 bg-gray-900/50 border border-orange-500/20 rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500/25 text-white transition-all duration-200"
                required
              />
            </div>
            <button
              type="submit"
              className="w-full bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-400 hover:to-orange-500 text-black font-bold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-xl"
            >
              –í–æ–π—Ç–∏
            </button>
          </form>
          
          <p className="text-sm text-gray-500 text-center mt-6">
            –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin / admin123
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 py-12">
      <div className="max-w-4xl mx-auto px-4">
        <div className="flex justify-between items-center mb-12">
          <div>
            <h1 className="text-4xl font-bold text-orange-400 mb-2">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>
            <div className="h-1 w-24 bg-gradient-to-r from-orange-500 to-orange-600 rounded-full"></div>
          </div>
          <button
            onClick={() => setIsAuthenticated(false)}
            className="bg-red-500/20 hover:bg-red-500/30 text-red-400 border border-red-500/30 hover:border-red-500/50 px-6 py-3 rounded-lg transition-all duration-200"
          >
            –í—ã–π—Ç–∏
          </button>
        </div>

        <div className="grid gap-8">
          <div className="bg-gray-800/40 backdrop-blur-sm rounded-2xl border border-orange-500/20 p-8">
            <h2 className="text-2xl font-bold text-orange-400 mb-6">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h2>
            
            <div className="grid md:grid-cols-2 gap-6">
              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-300">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</h3>
                <p className="text-gray-400 text-sm leading-relaxed">
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏ –∏—Å—Ç–æ—Ä–∏–∏ (–í–û–í 1941-1945, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ 1950-–µ) 
                  –∏ –Ω–æ–≤—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏: –î–∏–≤–µ–µ–≤–æ, –ì–æ—Ä–æ–¥–µ—Ü, –ê—Ä–∑–∞–º–∞—Å, –°–µ–º—ë–Ω–æ–≤, –í—ã–∫—Å–∞, –ü–∞–≤–ª–æ–≤–æ, –ë–∞–ª–∞—Ö–Ω–∞, –°–µ—Ä–≥–∞—á.
                </p>
                <button
                  onClick={initializeData}
                  disabled={isInitializing}
                  className="w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-400 hover:to-green-500 text-black font-bold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-xl disabled:opacity-50"
                >
                  {isInitializing ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'}
                </button>
              </div>

              <div className="space-y-4">
                <h3 className="text-lg font-semibold text-gray-300">–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h3>
                <p className="text-gray-400 text-sm leading-relaxed">
                  –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é 
                  —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é - –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.
                </p>
                <button
                  onClick={clearData}
                  className="w-full bg-gradient-to-r from-red-500 to-red-600 hover:from-red-400 hover:to-red-500 text-white font-bold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-xl"
                >
                  –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                </button>
              </div>
            </div>
          </div>

          <div className="bg-gray-800/40 backdrop-blur-sm rounded-2xl border border-orange-500/20 p-8">
            <h2 className="text-2xl font-bold text-orange-400 mb-4">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</h2>
            <div className="text-gray-300 space-y-2">
              <p>‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–∞—Ç—ã: –í–û–í 1941-1945, –ø–æ—Å–ª–µ–≤–æ–µ–Ω–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ 1950-–µ</p>
              <p>‚úÖ –£–±—Ä–∞–Ω —Ä–∞–∑–¥–µ–ª "–°–æ–±—ã—Ç–∏—è –∏ –º–∞—Ä—à—Ä—É—Ç—ã"</p>
              <p>‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω—ã "–ö—É–ª—å—Ç—É—Ä–∞" –∏ "–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"</p>
              <p>‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –≥–æ—Ä–æ–¥–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏</p>
              <p>‚úÖ –ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø–ª–∞—à–µ–∫ –∏—Å—Ç–æ—Ä–∏–∏</p>
              <p>‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å —Ç—ë–º–Ω–æ–π —Ç–µ–º–æ–π</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

// Main App Component
function App() {
  useEffect(() => {
    // Load Leaflet CSS and JS for dark theme map
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';
    document.head.appendChild(link);

    const script = document.createElement('script');
    script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';
    document.head.appendChild(script);

    return () => {
      document.head.removeChild(link);
      document.head.removeChild(script);
    };
  }, []);

  return (
    <div className="App">
      <BrowserRouter>
        <Navigation />
        <Routes>
          <Route path="/" element={<HomePage />} />
          <Route path="/history" element={<HistoryPage />} />
          <Route path="/attractions" element={<AttractionsPage />} />
          <Route path="/contacts" element={<ContactPage />} />
          <Route path="/admin" element={<AdminPage />} />
        </Routes>
      </BrowserRouter>
    </div>
  );
}

export default App;